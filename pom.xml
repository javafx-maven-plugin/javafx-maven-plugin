<?xml version="1.0" encoding="UTF-8"?>
<!--
    Copyright 2012 Daniel Zwolenski, et al.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <groupId>com.zenjava</groupId>
    <artifactId>javafx-maven-plugin</artifactId>
    <version>8.10.0-SNAPSHOT</version>

    <packaging>maven-plugin</packaging>

    <name>JavaFX Maven Plugin</name>
    <url>https://github.com/javafx-maven-plugin/javafx-maven-plugin</url>
    <description>
        The JavaFX Maven Plugin provides a way to to assemble distributable bundles for JavaFX applications from within
        Maven. It provides a wrapper around the JavaFX packaging tools which are provided as part of the JavaFX
        installation.
    </description>
    <inceptionYear>2012</inceptionYear>

    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <developers>
        <developer>
            <id>zonski</id>
            <name>Daniel Zwolenski</name>
            <email>zonski@gmail.com</email>
            <roles>
                <role>Original Author</role>
            </roles>
        </developer>
        <developer>
            <id>fibrefox</id>
            <name>Danny Althoff</name>
            <email>fibrefox@dynamicfiles.de</email>
            <roles>
                <role>Maintainer</role>
            </roles>
        </developer>
        <developer>
            <id>maxd</id>
            <name>Maxim Dobryakov</name>
            <email>job.dmm@gmail.com</email>
            <roles>
                <role>Maintainer</role>
            </roles>
        </developer>
    </developers>

    <contributors>
        <contributor>
            <name>Curtis Rueden</name>
            <properties>
                <github>ctrueden</github>
            </properties>
        </contributor>
        <contributor>
            <name>Danno Ferrin</name>
            <email>danno.ferrin@gmail.com</email>
            <properties>
                <github>shemnon</github>
            </properties>
        </contributor>
        <contributor>
            <name>Christian Fritz</name>
            <properties>
                <github>chr-fritz</github>
            </properties>
        </contributor>
        <contributor>
            <name>Paul Merlin</name>
            <properties>
                <github>eskatos</github>
            </properties>
        </contributor>
        <contributor>
            <name>Thomas Herzog</name>
            <properties>
                <github>mcduke</github>
            </properties>
        </contributor>
        <contributor>
            <name>MiChOo</name>
            <properties>
                <github>michoo</github>
            </properties>
        </contributor>
        <contributor>
            <name>Kevin Coghlan</name>
            <properties>
                <github>kevincoghlan</github>
            </properties>
        </contributor>
        <contributor>
            <name>Bartosz Firyn</name>
            <properties>
                <github>sarxos</github>
            </properties>
        </contributor>
        <contributor>
            <name>Oliver GÃ¼nther</name>
            <email>oliver.guenther@tuhh.de</email>
            <properties>
                <github>og0815</github>
            </properties>
        </contributor>
        <contributor>
            <name>Nick Currier</name>
            <properties>
                <github>hexid</github>
            </properties>
        </contributor>
        <contributor>
            <name>Jabqooo</name>
            <properties>
                <github>Jabqooo</github>
            </properties>
        </contributor>
        <contributor>
            <name>BTAN</name>
            <email>BTAN@MF110187.lafayette.micropole.com</email>
            <properties>
                <github>boliang-micropole</github>
            </properties>
        </contributor>
        <contributor>
            <name>Scott Wilson</name>
            <properties>
                <github>sa-wilson</github>
            </properties>
        </contributor>
        <contributor>
            <name>Florian Brunner</name>
            <properties>
                <github>puce77</github>
            </properties>
        </contributor>
    </contributors>

    <scm>
        <connection>scm:git:git://github.com/javafx-maven-plugin/javafx-maven-plugin.git</connection>
        <developerConnection>scm:git:git@github.com:javafx-maven-plugin/javafx-maven-plugin.git</developerConnection>
        <url>https://github.com/javafx-maven-plugin/javafx-maven-plugin.git</url>
    </scm>

    <issueManagement>
        <system>GitHub</system>
        <url>https://github.com/javafx-maven-plugin/javafx-maven-plugin/issues</url>
    </issueManagement>

    <distributionManagement>
        <snapshotRepository>
            <id>ossrh</id>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
        </snapshotRepository>
        <repository>
            <id>ossrh</id>
            <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
        </repository>
    </distributionManagement>

    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-plugin-plugin</artifactId>
                <version>3.5</version>
            </plugin>
        </plugins>
    </reporting>

    <build>
        <plugins>
			<!-- editorconfig finally can be checked via maven ;) -->
            <plugin>
                <groupId>org.ec4j.maven</groupId>
                <artifactId>editorconfig-maven-plugin</artifactId>
                <version>0.1.1</version>
                <executions>
                    <execution>
                        <id>editorconfig-check</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- Coding-Convention-Check via Checkstyle -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>3.1.2</version>

                <dependencies>
                    <dependency>
                        <groupId>com.puppycrawl.tools</groupId>
                        <artifactId>checkstyle</artifactId>
                        <version>8.43</version>
                    </dependency>
                </dependencies>

                <executions>
                    <execution>
                        <id>validate</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>

                        <configuration>
                            <configLocation>checkstyle.xml</configLocation>
                            <headerLocation>license.header</headerLocation>
                            <encoding>UTF-8</encoding>
                            <consoleOutput>true</consoleOutput>
                            <failsOnError>false</failsOnError>
                            <failOnViolation>true</failOnViolation>

                            <!-- do not check generated source files (like :help-mojo) -->
                            <sourceDirectories>
                                <sourceDirectory>${project.build.sourceDirectory}</sourceDirectory>
                                <sourceDirectory>${project.build.testSourceDirectory}</sourceDirectory>
                            </sourceDirectories>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.7.0</version>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                    <showDeprecation>true</showDeprecation>
                    <compilerArgument>-Xlint:unchecked</compilerArgument>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-plugin-plugin</artifactId>
                <version>3.5</version>
                <configuration>
                    <goalPrefix>jfx</goalPrefix>
                    <skipErrorNoDescriptorsFound>true</skipErrorNoDescriptorsFound>
                </configuration>
                <executions>
                    <execution>
                        <id>mojo-descriptor</id>
                        <goals>
                            <goal>descriptor</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>help-goal</id>
                        <goals>
                            <goal>helpmojo</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>3.0.0-M1</version>
                <executions>
                    <execution>
                        <id>enforce-versions</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireJavaVersion>
                                    <version>1.8.0-20</version>
                                </requireJavaVersion>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- integration-testing via own projects -->
            <plugin>
                <artifactId>maven-invoker-plugin</artifactId>
                <version>1.10</version>
                <configuration>
                    <projectsDirectory>src/it</projectsDirectory>
                    <cloneProjectsTo>${project.build.directory}/it</cloneProjectsTo>
                    <settingsFile>src/it/settings.xml</settingsFile>
                    <showErrors>true</showErrors>
                    <streamLogs>true</streamLogs>
                    <skipInvocation>${skipTests}</skipInvocation>
                    <postBuildHookScript>verify.bsh</postBuildHookScript>
                </configuration>
                <executions>
                    <execution>
                        <id>invoker-tests</id>
                        <phase>install</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>invoker-tests_withProperties</id>
                        <phase>install</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <skipInvocation>true</skipInvocation>
                            <projectsDirectory>src/it/with_properties</projectsDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <maven.compiler.target>1.8</maven.compiler.target>
        <maven.compiler.source>1.8</maven.compiler.source>

        <!-- profile-triggers -->
        <doSign>false</doSign>
        <doRelease>false</doRelease>

        <withSrc>false</withSrc>
        <withDoc>false</withDoc>
        <withSite>false</withSite>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.apache.maven</groupId>
            <artifactId>maven-plugin-api</artifactId>
            <version>3.5.2</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.maven</groupId>
            <artifactId>maven-core</artifactId>
            <version>3.5.2</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <profiles>
        <profile>
            <id>java8-dependencies</id>
            <activation>
                <file>
                    <exists>${java.home}/../lib/ant-javafx.jar</exists>
                </file>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>javafx-packager</groupId>
                    <artifactId>javafx-packager</artifactId>
                    <version>1.8</version>
                    <scope>system</scope>
                    <systemPath>${java.home}/../lib/ant-javafx.jar</systemPath>
                </dependency>
            </dependencies>
        </profile>
        <profile>
            <id>generate-signed-files</id>
            <activation>
                <property>
                    <name>doSign</name>
                    <value>true</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <!-- sign stuff for maven-central via OSSRH/Sonatype -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <version>1.6</version>
                        <executions>
                            <execution>
                                <id>sign-artifacts</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>generate-source-files</id>
            <activation>
                <property>
                    <name>withSrc</name>
                    <value>true</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-source-plugin</artifactId>
                        <version>3.0.1</version>
                        <executions>
                            <execution>
                                <id>generate-sources-jar</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>jar-no-fork</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>generate-javadoc-files</id>
            <activation>
                <property>
                    <name>withDoc</name>
                    <value>true</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <version>3.0.1</version>
                        <executions>
                            <execution>
                                <id>generate-javadoc-jar</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                                <configuration>
                                    <doclint>none</doclint>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>generate-site-files</id>
            <activation>
                <property>
                    <name>withSite</name>
                    <value>true</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-site-plugin</artifactId>
                        <version>3.8.2</version>
                        <executions>
                            <execution>
                                <id>generate-site-jar</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>test-with-other-jvms-using-docker</id>
            <activation>
                <property>
                    <name>testWithDocker</name>
                    <value>true</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <!-- test against several JVMs using docker -->
                    <!-- requires to have Docker installed of course -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>3.0.0</version>
                        <executions>
                            <execution>
                                <id>jvm-tests</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <!-- https://maven.apache.org/plugins/maven-antrun-plugin/index.html -->
                                    <!-- "It is not the intention of this plugin to provide a means of polluting the POM" ... i know ... but there is no good foreach/matrix feature -->
                                    <target>
                                        <!-- reminder: do NOT mount generated files, as it would OVERWRITE the generated files ... -->
                                        <!-- copy files including dotfiles using shopt (https://superuser.com/a/265222) -->
                                        <property name="preparebuild" value="shopt -s dotglob; mkdir /source; cp -a /copysource/* /source/; cd /source; chmod +x ./mvnw;" />
                                        <property name="buildcommand" value="./mvnw clean install --batch-mode -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN;" />

                                        <property name="commandinsidedocker.includedjdk" value="bash -c 'set -ex; ${preparebuild} ${buildcommand}'"/>
                                        <property name="commandinsidedocker.rawimage.debian" value="bash -c 'set -ex; export DEBIAN_FRONTEND=noninteractive; apt-get update; apt-get install -y --no-install-recommends -y openjdk-8-jdk openjfx rpm fakeroot; ${preparebuild} ${buildcommand}'"/>

                                        <!-- direct images where the JDK already is present -->
                                        <!--
                                        FIX THIS, as openjdk does not include openjfx/packager.jar ?!?
                                        <exec executable="docker" failonerror="true">
                                            <arg line="run -v ${basedir}:/copysource openjdk:8u302-jdk-oracle ${commandinsidedocker.direct}"/>
                                        </exec>
                                        -->

                                        <!-- raw images where the JDK has to be installed -->
                                        <exec executable="docker" failonerror="true">
                                            <arg line="run --rm -v ${basedir}:/copysource debian:stretch ${commandinsidedocker.rawimage.debian}"/>
                                        </exec>
                                    </target>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>release-to-ossrh</id>
            <activation>
                <property>
                    <name>doRelease</name>
                    <value>true</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.sonatype.plugins</groupId>
                        <artifactId>nexus-staging-maven-plugin</artifactId>
                        <version>1.6.5</version>
                        <extensions>true</extensions>
                        <configuration>
                            <serverId>ossrh</serverId>
                            <nexusUrl>https://oss.sonatype.org/</nexusUrl>
                            <autoReleaseAfterClose>false</autoReleaseAfterClose>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
